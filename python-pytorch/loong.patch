diff --git a/PKGBUILD b/PKGBUILD
index fd9d5fd..4d87bba 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -164,6 +164,11 @@ prepare() {
 
   git -c protocol.file.allow=always submodule update --init --recursive
 
+  # Fix for loong64
+  patch -Np1 -d third_party/sleef -i "${srcdir}"/sleef_loong64.patch
+  patch -Np1 -d third_party/cpuinfo -i "${srcdir}"/cpuinfo_loong64.patch
+  patch -Np1 -i "${srcdir}"/disable-aotriton.patch
+
   # Fix cmake prefix path (FS#78665)
   patch -Np1 -i "${srcdir}"/fix_cmake_prefix_path.patch
 
@@ -200,16 +205,15 @@ _prepare() {
 
   # Check tools/setup_helpers/cmake.py, setup.py and CMakeLists.txt for a list of flags that can be set via env vars.
   export ATEN_NO_TEST=ON  # do not build ATen tests
-  export USE_MKLDNN=ON
   export BUILD_CUSTOM_PROTOBUF=OFF
   export USE_GFLAGS=ON
   export USE_GLOG=ON
   export USE_VULKAN=ON
   export USE_OBSERVERS=ON
   # export USE_SYSTEM_LIBS=ON  # experimental, not all libs present in repos
-  export USE_SYSTEM_NCCL=ON
   export USE_SYSTEM_PYBIND11=ON
   export USE_SYSTEM_EIGEN_INSTALL=ON
+  : <<COMMENT_SEPARATOR
   export USE_GOLD_LINKER=ON
   export NCCL_VERSION=$(pkg-config nccl --modversion)
   export NCCL_VER_CODE=$(sed -n 's/^#define NCCL_VERSION_CODE\s*\(.*\).*/\1/p' /usr/include/nccl.h)
@@ -230,6 +234,7 @@ _prepare() {
   # This list is from ./Dockerfile
   export TORCH_CUDA_ARCH_LIST="6.1 7.0 7.2 7.5 8.0 8.6 8.7 8.9 9.0 9.0a 12.0"
 
+COMMENT_SEPARATOR
   export ROCM_PATH=/opt/rocm
   export HIP_ROOT_DIR=/opt/rocm
 
@@ -254,23 +259,24 @@ _prepare() {
 
 build() {
   cd "${srcdir}/${_pkgname}"
-  echo "Building without cuda or rocm and without non-x86-64 optimizations"
+  echo "Building without cuda or rocm and without non-loong64 optimizations"
   _prepare
   export USE_CUDA=0
   export USE_CUDNN=0
   export USE_ROCM=0
-  echo "add_definitions(-march=x86-64)" >> cmake/MiscCheck.cmake
+  echo "add_definitions(-march=loongarch64)" >> cmake/MiscCheck.cmake
   python setup.py build
 
   cd "${srcdir}/${_pkgname}-opt"
-  echo "Building without cuda or rocm and with non-x86-64 optimizations"
+  echo "Building without cuda or rocm and with non-loong64 optimizations"
   _prepare
   export USE_CUDA=0
   export USE_CUDNN=0
   export USE_ROCM=0
-  echo "add_definitions(-march=x86-64-v3)" >> cmake/MiscCheck.cmake
+  echo "add_definitions(-march=la464)" >> cmake/MiscCheck.cmake
   python setup.py build
 
+  : <<COMMENT_SEPARATOR
   cd "${srcdir}/${_pkgname}-cuda"
   echo "Building with cuda and without non-x86-64 optimizations"
   _prepare
@@ -291,9 +297,10 @@ build() {
   _prepare
   echo "add_definitions(-march=x86-64-v3)" >> cmake/MiscCheck.cmake
   python setup.py build
+COMMENT_SEPARATOR
 
   cd "${srcdir}/${_pkgname}-rocm"
-  echo "Building with rocm and without non-x86-64 optimizations"
+  echo "Building with rocm and without non-loong64 optimizations"
   # -fcf-protection is not supported by HIP, see
   # https://rocm.docs.amd.com/projects/llvm-project/en/latest/reference/rocmcc.html#support-status-of-other-clang-options
   CXXFLAGS+=" -fcf-protection=none"
@@ -302,20 +309,20 @@ build() {
   export USE_CUDNN=0
   export USE_ROCM=1
   export MAGMA_HOME=/opt/rocm
-  echo "add_definitions(-march=x86-64)" >> cmake/MiscCheck.cmake
+  echo "add_definitions(-march=loongarch64)" >> cmake/MiscCheck.cmake
   # Conversion of CUDA to ROCm source files
   python tools/amd_build/build_amd.py
   patch -Np1 -i "$srcdir/pytorch-rocm-jit.patch"
   python setup.py build
 
   cd "${srcdir}/${_pkgname}-opt-rocm"
-  echo "Building with rocm and with non-x86-64 optimizations"
+  echo "Building with rocm and with non-loong64 optimizations"
   _prepare
   export USE_CUDA=0
   export USE_CUDNN=0
   export USE_ROCM=1
   export MAGMA_HOME=/opt/rocm
-  echo "add_definitions(-march=x86-64-v3)" >> cmake/MiscCheck.cmake
+  echo "add_definitions(-march=la464)" >> cmake/MiscCheck.cmake
   # Conversion of CUDA to ROCm source files
   python tools/amd_build/build_amd.py
   patch -Np1 -i "$srcdir/pytorch-rocm-jit.patch"
@@ -360,7 +367,7 @@ package_python-pytorch() {
 }
 
 package_python-pytorch-opt() {
-  pkgdesc="${_pkgdesc} (with AVX2 CPU optimizations)"
+  pkgdesc="${_pkgdesc} (with LASX CPU optimizations)"
   conflicts=(python-pytorch)
   provides=(python-pytorch=${pkgver})
 
@@ -399,7 +406,7 @@ package_python-pytorch-rocm() {
 }
 
 package_python-pytorch-opt-rocm() {
-  pkgdesc="${_pkgdesc} (with ROCm and AVX2 CPU optimizations)"
+  pkgdesc="${_pkgdesc} (with ROCm and LASX CPU optimizations)"
   depends+=(rocm-hip-sdk hipblaslt roctracer miopen-hip magma-hip onednn)
   conflicts=(python-pytorch)
   provides=(python-pytorch=${pkgver} python-pytorch-rocm=${pkgver})
@@ -408,4 +415,19 @@ package_python-pytorch-opt-rocm() {
   _package
 }
 
+depends=(${depends[@]/intel-oneapi-mkl})
+makedepends=(${makedepends[@]/magma-cuda})
+makedepends=(${makedepends[@]/cuda})
+makedepends=(${makedepends[@]/gcc13})
+makedepends=(${makedepends[@]/nccl})
+makedepends=(${makedepends[@]/cudnn})
+pkgname=(${pkgname[@]/"${pkgbase}-cuda"})
+pkgname=(${pkgname[@]/"${pkgbase}-opt-cuda"})
+source+=("disable-aotriton.patch::https://github.com/pytorch/pytorch/commit/856bbf193dca30e4782acf5c350e5925a5716b98.diff"
+         "sleef_loong64.patch"
+         "cpuinfo_loong64.patch::https://raw.githubusercontent.com/loong64/pytorch/refs/tags/v2.6.0/cpuinfo/cpuinfo_loong64.patch")
+b2sums+=('043ffc720273b048621e6ef3942b53813adfcd146d7cc34ef676314e66c37ca7b3290826bb0087d4866a3ce73345512df536648007c0ef93762e10ffd8cbd29d'
+         '5a06663c88476341c169dadf8a2adda13fd264fda9468bcd1e3c3d120c8ba3949e9eb6396faf824afae4b2557665f5dd4f09ccd162f08dc022cf2076fe0620fe'
+         'ddda1c7d9bc6d21e6715a502cff36a0c765746b183c542ea2e745d4b7b1f6bd6dfa8efb1990c8d806fb70052fd9e5f0343aeec030df5c5b551cc99b949a6341b')
+
 # vim:set ts=2 sw=2 et:
