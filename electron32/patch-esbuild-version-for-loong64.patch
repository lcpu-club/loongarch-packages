--- a/third_party/devtools-frontend/src/node_modules/esbuild/lib/main.js
+++ b/third_party/devtools-frontend/src/node_modules/esbuild/lib/main.js
@@ -717,8 +717,8 @@ function createChannel(streamIn) {
     if (isFirstPacket) {
       isFirstPacket = false;
       let binaryVersion = String.fromCharCode(...bytes);
-      if (binaryVersion !== "0.14.13") {
-        throw new Error(`Cannot start service: Host version "${"0.14.13"}" does not match binary version ${JSON.stringify(binaryVersion)}`);
+      if (binaryVersion !== "0.14.54") {
+        throw new Error(`Cannot start service: Host version "${"0.14.54"}" does not match binary version ${JSON.stringify(binaryVersion)}`);
       }
       return;
     }
@@ -1804,7 +1804,7 @@ if (process.env.ESBUILD_WORKER_THREADS !== "0") {
   }
 }
 var _a;
-var isInternalWorkerThread = ((_a = worker_threads == null ? void 0 : worker_threads.workerData) == null ? void 0 : _a.esbuildVersion) === "0.14.13";
+var isInternalWorkerThread = ((_a = worker_threads == null ? void 0 : worker_threads.workerData) == null ? void 0 : _a.esbuildVersion) === "0.14.54";
 var esbuildCommandAndArgs = () => {
   if ((!ESBUILD_BINARY_PATH || false) && (path2.basename(__filename) !== "main.js" || path2.basename(__dirname) !== "lib")) {
     throw new Error(`The esbuild JavaScript API cannot be bundled. Please mark the "esbuild" package as external so it's not included in the bundle.
@@ -1863,7 +1863,7 @@ var fsAsync = {
     }
   }
 };
-var version = "0.14.13";
+var version = "0.14.54";
 var build = (options) => ensureServiceIsRunning().build(options);
 var serve = (serveOptions, buildOptions) => ensureServiceIsRunning().serve(serveOptions, buildOptions);
 var transform = (input, options) => ensureServiceIsRunning().transform(input, options);
@@ -1972,7 +1972,7 @@ var ensureServiceIsRunning = () => {
   if (longLivedService)
     return longLivedService;
   let [command, args] = esbuildCommandAndArgs();
-  let child = child_process.spawn(command, args.concat(`--service=${"0.14.13"}`, "--ping"), {
+  let child = child_process.spawn(command, args.concat(`--service=${"0.14.54"}`, "--ping"), {
     windowsHide: true,
     stdio: ["pipe", "pipe", "inherit"],
     cwd: defaultWD
@@ -2081,7 +2081,7 @@ var runServiceSync = (callback) => {
     esbuild: node_exports
   });
   callback(service);
-  let stdout = child_process.execFileSync(command, args.concat(`--service=${"0.14.13"}`), {
+  let stdout = child_process.execFileSync(command, args.concat(`--service=${"0.14.54"}`), {
     cwd: defaultWD,
     windowsHide: true,
     input: stdin,
@@ -2097,7 +2097,7 @@ var workerThreadService = null;
 var startWorkerThreadService = (worker_threads2) => {
   let { port1: mainPort, port2: workerPort } = new worker_threads2.MessageChannel();
   let worker = new worker_threads2.Worker(__filename, {
-    workerData: { workerPort, defaultWD, esbuildVersion: "0.14.13" },
+    workerData: { workerPort, defaultWD, esbuildVersion: "0.14.54" },
     transferList: [workerPort],
     execArgv: []
   });
