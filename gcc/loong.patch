diff --git a/PKGBUILD b/PKGBUILD
index 1be6613..3d1ad76 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -21,8 +21,6 @@ makedepends=(
   gcc-ada
   gcc-d
   git
-  lib32-glibc
-  lib32-gcc-libs
   libisl
   libmpc
   python
@@ -67,6 +65,10 @@ prepare() {
 
   # Reproducible gcc-ada
   patch -Np0 < "$srcdir/gcc-ada-repro.patch"
+  # Fix libdir
+  patch -Np1 -i "$srcdir/gcc-lib64-lib.patch"
+  # Back port fix for __builtin_lsx_vldx
+  patch -Np1 -i "$srcdir/0001-LoongArch-Fix-incorrect-reorder-of-__lsx_vldx-and-__.patch"
 
   mkdir -p "$srcdir/gcc-build"
   mkdir -p "$srcdir/libgccjit-build"
@@ -95,7 +97,8 @@ build() {
       --enable-link-serialization=1
       --enable-linker-build-id
       --enable-lto
-      --enable-multilib
+      --disable-multilib
+      --disable-multiarch
       --enable-plugin
       --enable-shared
       --enable-threads=posix
@@ -113,7 +116,7 @@ build() {
   CXXFLAGS=${CXXFLAGS/-Werror=format-security/}
 
   "$srcdir/gcc/configure" \
-    --enable-languages=ada,c,c++,d,fortran,go,lto,m2,objc,obj-c++,rust \
+    --enable-languages=ada,c,c++,d,fortran,lto,m2,objc,obj-c++,rust \
     --enable-bootstrap \
     "${_confflags[@]:?_confflags unset}"
 
@@ -162,7 +165,7 @@ package_gcc-libs() {
   pkgdesc='Runtime libraries shipped by GCC'
   depends=('glibc>=2.27')
   options=(!emptydirs !strip)
-  provides=($pkgname-multilib libgo.so libgfortran.so libgphobos.so
+  provides=($pkgname-multilib libgfortran.so libgphobos.so
             libubsan.so libasan.so libtsan.so liblsan.so)
   replaces=($pkgname-multilib libgphobos)
 
@@ -172,7 +175,6 @@ package_gcc-libs() {
 
   for lib in libatomic \
              libgfortran \
-             libgo \
              libgomp \
              libitm \
              libquadmath \
@@ -220,22 +222,18 @@ package_gcc() {
   install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}
 
   make -C $CHOST/libgcc DESTDIR="$pkgdir" install
-  make -C $CHOST/32/libgcc DESTDIR="$pkgdir" install
   rm -f "$pkgdir"/usr/lib{,32}/libgcc_s.so*
 
   make -C $CHOST/libstdc++-v3/src DESTDIR="$pkgdir" install
   make -C $CHOST/libstdc++-v3/include DESTDIR="$pkgdir" install
   make -C $CHOST/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install
   make -C $CHOST/libstdc++-v3/python DESTDIR="$pkgdir" install
-  make -C $CHOST/32/libstdc++-v3/src DESTDIR="$pkgdir" install
-  make -C $CHOST/32/libstdc++-v3/include DESTDIR="$pkgdir" install
-  make -C $CHOST/32/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install
 
   make DESTDIR="$pkgdir" install-libcc1
   install -d "$pkgdir/usr/share/gdb/auto-load/usr/lib"
   mv "$pkgdir"/usr/lib/libstdc++.so.6.*-gdb.py \
     "$pkgdir/usr/share/gdb/auto-load/usr/lib/"
-  rm "$pkgdir"/usr/lib{,32}/libstdc++.so*
+  rm "$pkgdir"/usr/lib/libstdc++.so*
 
   make DESTDIR="$pkgdir" install-fixincludes
   make -C gcc DESTDIR="$pkgdir" install-mkheaders
@@ -252,14 +250,10 @@ package_gcc() {
   make -C $CHOST/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
   make -C $CHOST/libsanitizer/tsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
   make -C $CHOST/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
-  make -C $CHOST/32/libgomp DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
-  make -C $CHOST/32/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
-  make -C $CHOST/32/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
-  make -C $CHOST/32/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
 
   make -C gcc DESTDIR="$pkgdir" install-man install-info
-  rm "$pkgdir"/usr/share/man/man1/{gccgo,gfortran,lto-dump,gdc,gm2}.1
-  rm "$pkgdir"/usr/share/info/{gccgo,gfortran,gnat-style,gnat_rm,gnat_ugn,gdc,m2}.info
+  rm -f "$pkgdir"/usr/share/man/man1/{gccgo,gfortran,lto-dump,gdc,gm2}.1
+  rm -f "$pkgdir"/usr/share/info/{gccgo,gfortran,gnat-style,gnat_rm,gnat_ugn,gdc,m2}.info
 
   make -C libcpp DESTDIR="$pkgdir" install
   make -C gcc DESTDIR="$pkgdir" install-po
@@ -270,7 +264,7 @@ package_gcc() {
   # create cc-rs compatible symlinks
   # https://github.com/rust-lang/cc-rs/blob/1.0.73/src/lib.rs#L2578-L2581
   for binary in {c++,g++,gcc,gcc-ar,gcc-nm,gcc-ranlib}; do
-    ln -s /usr/bin/${binary} "${pkgdir}"/usr/bin/x86_64-linux-gnu-${binary}
+    ln -s /usr/bin/${binary} "${pkgdir}"/usr/bin/`uname -m`-linux-gnu-${binary}
   done
 
   # POSIX conformance launcher scripts for c89 and c99
@@ -302,8 +296,6 @@ package_gcc-fortran() {
   cd gcc-build
   make -C $CHOST/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
     install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
-  make -C $CHOST/32/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
-    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
   make -C $CHOST/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
   make -C gcc DESTDIR="$pkgdir" fortran.install-{common,man,info}
   install -Dm755 gcc/f951 "$pkgdir/${_libdir}/f951"
@@ -348,10 +340,6 @@ package_gcc-ada() {
   make DESTDIR="${pkgdir}" INSTALL="install" \
     INSTALL_DATA="install -m644" install-libada
 
-  cd "$srcdir"/gcc-build/$CHOST/32/libada
-  make DESTDIR="${pkgdir}" INSTALL="install" \
-    INSTALL_DATA="install -m644" install-libada
-
   ln -s gcc "$pkgdir/usr/bin/gnatgcc"
 
   # insist on dynamic linking, but keep static libraries because gnatmake complains
@@ -360,12 +348,6 @@ package_gcc-ada() {
   ln -s libgnat-${pkgver%%.*}.so "$pkgdir/usr/lib/libgnat.so"
   rm -f "$pkgdir"/${_libdir}/adalib/libgna{rl,t}.so
 
-  install -d "$pkgdir/usr/lib32/"
-  mv "$pkgdir"/${_libdir}/32/adalib/libgna{rl,t}-${pkgver%%.*}.so "$pkgdir/usr/lib32"
-  ln -s libgnarl-${pkgver%%.*}.so "$pkgdir/usr/lib32/libgnarl.so"
-  ln -s libgnat-${pkgver%%.*}.so "$pkgdir/usr/lib32/libgnat.so"
-  rm -f "$pkgdir"/${_libdir}/32/adalib/libgna{rl,t}.so
-
   # Install Runtime Library Exception
   install -d "$pkgdir/usr/share/licenses/$pkgname/"
   ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
@@ -512,3 +494,12 @@ package_libgccjit() {
   ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
     "$pkgdir/usr/share/licenses/$pkgname/"
 }
+
+source+=("gcc-lib64-lib.patch"
+         # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=119084
+         # Fix https://github.com/cisco/openh264/issues/3857
+         "0001-LoongArch-Fix-incorrect-reorder-of-__lsx_vldx-and-__.patch")
+sha256sums+=('d09cbb949364442a78e886b8f55593f07ad17f1e5369ecc83d6c6826015ba22e'
+             '8a4fec2937e22fda73ce549b3f11a70c2bcc343c2dfca2de29217b2708148552')
+pkgname=(${pkgname[@]/lib32-gcc-libs})
+pkgname=(${pkgname[@]/gcc-go})
