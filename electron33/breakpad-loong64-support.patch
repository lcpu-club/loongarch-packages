diff --git a/src/common/linux/dump_symbols.cc b/src/common/linux/dump_symbols.cc
index 55fa9846..2d03c6c0 100644
--- a/src/common/linux/dump_symbols.cc
+++ b/src/common/linux/dump_symbols.cc
@@ -111,6 +111,10 @@ using google_breakpad::wasteful_vector;
 #define EM_AARCH64      183
 #endif
 
+#ifdef EM_LOONGARCH
+#define EM_LOONGARCH    258
+#endif
+
 // Define ZStd compression if host machine does not include this define.
 #ifndef ELFCOMPRESS_ZSTD
 #define ELFCOMPRESS_ZSTD 2
@@ -1119,6 +1123,7 @@ const char* ElfArchitecture(const typename ElfClass::Ehdr* elf_header) {
     case EM_X86_64:     return "x86_64";
     case EM_RISCV:      return "riscv";
     case EM_NDS32:      return "nds32";
+    case EM_LOONGARCH:  return "loongarch64";
     default: return NULL;
   }
 }
diff --git a/src/common/linux/memory_mapped_file.cc b/src/common/linux/memory_mapped_file.cc
index a7b96eb5..a50859b5 100644
--- a/src/common/linux/memory_mapped_file.cc
+++ b/src/common/linux/memory_mapped_file.cc
@@ -72,7 +72,8 @@ bool MemoryMappedFile::Map(const char* path, size_t offset) {
 
 #if defined(__x86_64__) || defined(__aarch64__) || \
    (defined(__mips__) && _MIPS_SIM == _ABI64) || \
-   (defined(__riscv) && __riscv_xlen == 64)
+   (defined(__riscv) && __riscv_xlen == 64) || \
+   (defined(__loongarch__) && __loongarch_grlen == 64)
 
   struct kernel_stat st;
   if (sys_fstat(fd, &st) == -1 || st.st_size < 0) {
