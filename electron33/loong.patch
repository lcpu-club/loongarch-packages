diff --git a/PKGBUILD b/PKGBUILD
index fc5c6ab..0385a1f 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -459,6 +459,9 @@ prepare() {
   sed -i "s|@ELECTRON@|${pkgname}|" electron.desktop
   sed -i "s|@ELECTRON_NAME@|Electron ${_major_ver}|" electron.desktop
 
+  # Apply in advance to so that makepkg-source-roller.py will not throw error
+  patch -Np1 -d chromium-mirror_third_party_depot_tools -i "${srcdir}/depot_tools-loong64-support.patch"
+
   cp -r chromium-mirror_third_party_depot_tools depot_tools
   export PATH+=":$PWD/depot_tools" DEPOT_TOOLS_UPDATE=0
   #export VPYTHON_BYPASS='manually managed python not supported by chrome operations'
@@ -466,6 +469,14 @@ prepare() {
   echo "Putting together electron sources"
   # Generate gclient gn args file and prepare-electron-source-tree.sh
   python makepkg-source-roller.py generate electron/DEPS $pkgname
+  # Do not use the script to fetch esbuild since google doesn't distribute it
+  # The esbuild is added manually
+  sed -i '/esbuild/d' prepare-electron-source-tree.sh
+  # Add esbuild binary manually
+  npm install @esbuild/linux-loong64@0.14.54
+  mkdir -p src/third_party/devtools-frontend/src/third_party/esbuild
+  mv node_modules/@esbuild/linux-loong64/bin/esbuild src/third_party/devtools-frontend/src/third_party/esbuild/esbuild
+  rm -r node_modules # Cleaning
   rbash prepare-electron-source-tree.sh "$CARCH"
   mv electron src/electron
 
@@ -479,8 +490,16 @@ prepare() {
     -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
   src/build/util/lastchange.py \
     -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
-  src/tools/update_pgo_profiles.py --target=linux update \
-    --gs-url-base=chromium-optimization-profiles/pgo_profiles
+  #src/tools/update_pgo_profiles.py --target=linux update \
+    #--gs-url-base=chromium-optimization-profiles/pgo_profiles
+
+  pushd src/third_party/node/
+  sed -i -e 's/@rollup/rollup/' -e "s/'wasm-node',//" node_modules.py
+  #local _rollup_ver="$(jq -r .dependencies.\"@rollup/wasm-node\" package.json)"
+  local _rollup_ver="4.32.0" # Known version that supports loong64
+  jq ".dependencies.rollup=\"$_rollup_ver\"" package.json > package.json.new
+  mv package.json{.new,}
+  popd
 
   # https://gitlab.archlinux.org/archlinux/packaging/packages/electron32/-/issues/1
   src/third_party/node/update_npm_deps
@@ -512,7 +531,9 @@ prepare() {
   patch -Np1 -i ../add-more-CFI-suppressions-for-inline-PipeWire-functions.patch
 
   # Allow libclang_rt.builtins from compiler-rt >= 16 to be used
-  patch -Np1 -i ../compiler-rt-adjust-paths.patch
+  #patch -Np1 -i ../compiler-rt-adjust-paths.patch
+  # Use modified version for loong64 support
+  patch -Np1 -i ../compiler-rt-adjust-paths-loong64.patch
 
   # Fixes for building with libstdc++ instead of libc++
   patch -Np1 -i ../chromium-patches-*/chromium-130-interference-size.patch
@@ -535,6 +556,16 @@ prepare() {
   patch -Np1 -i "${srcdir}/use-system-libraries-in-node.patch"
   # patch -Np1 -i "${srcdir}/default_app-icon.patch"  # Icon from .desktop file
 
+  # Add loong64 support for chromium
+  patch -Np1 -i "${srcdir}/chromium-loong64-support.patch"
+  patch -Np1 -i "${srcdir}/extensions-common-api-runtime.json-add-loong64.patch"
+  patch -Np1 -i "${srcdir}/components-variations-add-loong64.patch"
+  patch -Np1 -i "${srcdir}/fix-base-process-launch.h.patch"
+  patch -Np1 -i "${srcdir}/allow-sched_getaffinity-in-seccomp-for-loong64.patch"
+  patch -Np1 -i "${srcdir}/devtools-frontend-disable-terser.patch"
+  # Add loong64 support for electron
+  patch -Np1 -d electron -i "${srcdir}/electron_runtime_api_dalagate-add-loong64-support.patch"
+
   # Allow building against system libraries in official builds
   echo "Patching Chromium for using system libraries..."
   sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
@@ -595,7 +626,7 @@ build() {
     'clang_base_path="/usr"'
     'clang_use_chrome_plugins=false'
     "clang_version=\"$_clang_version\""
-    'chrome_pgo_phase=2'
+    'chrome_pgo_phase=0'
   )
 
   # Allow the use of nightly features with stable Rust compiler
@@ -664,3 +695,23 @@ package() {
   install -Dm644 src/electron/default_app/icon.png \
           "${pkgdir}/usr/share/pixmaps/${pkgname}.png"  # hicolor has no 1024x1024
 }
+
+makedepends+=(jq)
+source+=("depot_tools-loong64-support.patch"
+         "compiler-rt-adjust-paths-loong64.patch"
+         "extensions-common-api-runtime.json-add-loong64.patch"
+         "electron_runtime_api_dalagate-add-loong64-support.patch"
+         "chromium-loong64-support.patch"
+         "components-variations-add-loong64.patch"
+         "fix-base-process-launch.h.patch"
+         "allow-sched_getaffinity-in-seccomp-for-loong64.patch"
+         "devtools-frontend-disable-terser.patch")
+sha256sums+=('731ce1a98a181d0c22eb4a6f2e1dbb5417471a6ee17049603b3201ef5e931bd3'
+             '56e8d50b7c744f51953990aefceeae5b7dd08063baaf06df98ddeec02a2d4690'
+             '2f3662096c15de8797113a60afda4cd746ca64bfb7f901fe976eb3d29389c659'
+             '0e9152849d7ff20e54eea3e71f6cecedbfd923579557e81158369577e047c5d9'
+             '1d54c67518372511fb23658b14008e154dbf7dba54453ab7d0bf48a35fdcf4c4'
+             'a131da5af26ab680bf282bdd25c04e1ee7cf14e210f3f6d897c5f5707b468838'
+             '8473db8c1a63cb280aebedba0958cdfa0d63d7b4b0a7f7b262f171cbd8e0b1f6'
+             'b48d40e93f020b5e8861f1f320437984d8f7d62c568ad1995af78e49e88de7a9'
+             'a5c18b38b6969f63c4216b630ecd84e6e0a72a2eddbbf5d2d0a4a40103f7f0c0')
