diff --git a/PKGBUILD b/PKGBUILD
index c6c27af..95e31b6 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -7,7 +7,6 @@
 pkgbase=rust
 pkgname=(
   rust
-  lib32-rust-libs
   rust-musl
   rust-aarch64-gnu
   rust-aarch64-musl
@@ -41,8 +40,6 @@ makedepends=(
   aarch64-linux-gnu-glibc
   clang
   cmake
-  lib32-gcc-libs
-  lib32-glibc
   libffi
   lld
   llvm
@@ -81,6 +78,11 @@ validpgpkeys=(
 prepare() {
   cd rustc-$pkgver-src
 
+  # DO NOT directly append `-C code-model=medium` to RUSTFLAGS
+  # as it will break the build for targets other than loongarch64
+  export CARGO_TARGET_LOONGARCH64_UNKNOWN_LINUX_GNU_RUSTFLAGS="${RUSTFLAGS} -C code-model=medium"
+  export CARGO_TARGET_LOONGARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS="${RUSTFLAGS} -C code-model=medium"
+
   # Patch bootstrap so that rust-analyzer-proc-macro-srv
   # is in /usr/lib instead of /usr/libexec
   patch -Np1 -i ../0001-bootstrap-Change-libexec-dir.patch
@@ -110,9 +112,8 @@ link-shared = true
 
 [build]
 target = [
-  "x86_64-unknown-linux-gnu",
-  "i686-unknown-linux-gnu",
-  "x86_64-unknown-linux-musl",
+  "$(uname -m)-unknown-linux-gnu",
+  "$(uname -m)-unknown-linux-musl",
   "aarch64-unknown-linux-gnu",
   "aarch64-unknown-linux-musl",
   "wasm32-unknown-unknown",
@@ -164,24 +165,20 @@ jemalloc = true
 compression-formats = ["gz"]
 compression-profile = "fast"
 
-[target.x86_64-unknown-linux-gnu]
+[target.$(uname -m)-unknown-linux-gnu]
 cc = "/usr/bin/gcc"
 cxx = "/usr/bin/g++"
 ar = "/usr/bin/gcc-ar"
 ranlib = "/usr/bin/gcc-ranlib"
 llvm-config = "/usr/bin/llvm-config"
 
-[target.i686-unknown-linux-gnu]
+# Failed with musl-gcc: ld.lld: error: unable to find library -lgcc_s
+# Switch from musl-gcc to gcc
+[target.$(uname -m)-unknown-linux-musl]
 cc = "/usr/bin/gcc"
 cxx = "/usr/bin/g++"
 ar = "/usr/bin/gcc-ar"
 ranlib = "/usr/bin/gcc-ranlib"
-
-[target.x86_64-unknown-linux-musl]
-cc = "/usr/bin/musl-gcc"
-cxx = "/usr/bin/g++"
-ar = "/usr/bin/gcc-ar"
-ranlib = "/usr/bin/gcc-ranlib"
 sanitizers = false
 musl-root = "/usr/lib/musl"
 
@@ -297,12 +294,9 @@ build() {
 
   # rustbuild always installs copies of the shared libraries to /usr/lib,
   # overwrite them with symlinks to the per-architecture versions
-  mkdir -pv usr/lib32
-  ln -srvft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
-  ln -srvft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so
+  ln -srvft usr/lib   usr/lib/rustlib/$(uname -m)-unknown-linux-gnu/lib/*.so
 
-  _pick dest-i686 usr/lib/rustlib/i686-unknown-linux-gnu usr/lib32
-  _pick dest-musl usr/lib/rustlib/x86_64-unknown-linux-musl
+  _pick dest-musl usr/lib/rustlib/$(uname -m)-unknown-linux-musl
   _pick dest-aarch64-gnu usr/lib/rustlib/aarch64-unknown-linux-gnu
   _pick dest-aarch64-musl usr/lib/rustlib/aarch64-unknown-linux-musl
   _pick dest-wasm usr/lib/rustlib/wasm32-*
