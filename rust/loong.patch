diff --git a/PKGBUILD b/PKGBUILD
index e084296..1bf7764 100644
--- a/PKGBUILD
+++ b/PKGBUILD
@@ -7,7 +7,6 @@
 pkgbase=rust
 pkgname=(
   rust
-  lib32-rust-libs
   rust-musl
   rust-wasm
   rust-src
@@ -37,8 +36,6 @@ depends=(
 makedepends=(
   clang
   cmake
-  lib32-gcc-libs
-  lib32-glibc
   libffi
   lld
   llvm
@@ -76,6 +73,10 @@ validpgpkeys=(
 prepare() {
   cd rustc-$pkgver-src
 
+  export CFLAGS="${CFLAGS} -mcmodel=medium"
+  export CXXFLAGS="${CXXFLAGS} -mcmodel=medium"
+  export RUSTFLAGS="${RUSTFLAGS} -C code-model=medium"
+
   # Patch bootstrap so that rust-analyzer-proc-macro-srv
   # is in /usr/lib instead of /usr/libexec
   patch -Np1 -i ../0001-bootstrap-Change-libexec-dir.patch
@@ -93,6 +94,11 @@ prepare() {
   # https://github.com/rust-lang/rust/pull/130034
   patch -Np1 -i ../0005-Fix-enabling-wasm-component-ld-to-match-other-tools.patch
 
+  # Rust 1.82's' llvm fp16 is not complete, so we temporarily disable it
+  patch -Np1 -i ../LoongArch64-fix-fp16.patch
+  # The hash will change after patching
+  sed -i 's/0eee6428706eeb832d63c24ee6674b65c47eed8e7542b4aca9686e13651c1765/5e2a3cfeccbb43fe6c74a957a9573f9807685253146b4ca33a4de11ea2207a71/' vendor/compiler_builtins-0.1.123/.cargo-checksum.json
+
   cat >config.toml <<END
 # see src/bootstrap/defaults/
 profile = "dist"
@@ -105,9 +111,8 @@ link-shared = true
 
 [build]
 target = [
-  "x86_64-unknown-linux-gnu",
-  "i686-unknown-linux-gnu",
-  "x86_64-unknown-linux-musl",
+  "`uname -m`-unknown-linux-gnu",
+  "`uname -m`-unknown-linux-musl",
   "wasm32-unknown-unknown",
   "wasm32-wasi",
   "wasm32-wasip1",
@@ -157,20 +162,14 @@ jemalloc = true
 compression-formats = ["gz"]
 compression-profile = "fast"
 
-[target.x86_64-unknown-linux-gnu]
+[target.`uname -m`-unknown-linux-gnu]
 cc = "/usr/bin/gcc"
 cxx = "/usr/bin/g++"
 ar = "/usr/bin/gcc-ar"
 ranlib = "/usr/bin/gcc-ranlib"
 llvm-config = "/usr/bin/llvm-config"
 
-[target.i686-unknown-linux-gnu]
-cc = "/usr/bin/gcc"
-cxx = "/usr/bin/g++"
-ar = "/usr/bin/gcc-ar"
-ranlib = "/usr/bin/gcc-ranlib"
-
-[target.x86_64-unknown-linux-musl]
+[target.`uname -m`-unknown-linux-musl]
 sanitizers = false
 musl-root = "/usr/lib/musl"
 
@@ -238,12 +237,9 @@ build() {
 
   # rustbuild always installs copies of the shared libraries to /usr/lib,
   # overwrite them with symlinks to the per-architecture versions
-  mkdir -pv usr/lib32
-  ln -srvft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
-  ln -srvft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so
+  ln -srvft usr/lib   usr/lib/rustlib/`uname -m`-unknown-linux-gnu/lib/*.so
 
-  _pick dest-i686 usr/lib/rustlib/i686-unknown-linux-gnu usr/lib32
-  _pick dest-musl usr/lib/rustlib/x86_64-unknown-linux-musl
+  _pick dest-musl usr/lib/rustlib/`uname -m`-unknown-linux-musl
   _pick dest-wasm usr/lib/rustlib/wasm32-*
   _pick dest-src  usr/lib/rustlib/src
 }
@@ -323,4 +319,7 @@ package_rust-src() {
     rustc-$pkgver-src/{COPYRIGHT,LICENSE-MIT}
 }
 
+source+=("LoongArch64-fix-fp16.patch")
+b2sums+=('a6260527f013860a7f7f8f5d7f7d110137e75a9b1534efca335e11d563ab172e1a62449ac43342f3dc00f02f62ec378856fe7e4edac972055712cb59ed47860e')
+
 # vim:set ts=2 sw=2 et:
